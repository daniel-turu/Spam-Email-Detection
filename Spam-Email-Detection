{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":982,"sourceType":"datasetVersion","datasetId":483}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\npath = ''\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        path = os.path.join(dirname, filename)\n        print(os.path.join(dirname, filename))\n        \n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-05T10:18:52.036078Z","iopub.execute_input":"2024-10-05T10:18:52.036578Z","iopub.status.idle":"2024-10-05T10:18:52.048532Z","shell.execute_reply.started":"2024-10-05T10:18:52.036533Z","shell.execute_reply":"2024-10-05T10:18:52.047214Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"path\ndata = pd.read_csv(path, encoding='latin-1')\n\ndata = data.drop(['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4'], axis=1)\n\n# View the updated DataFrame\nprint(data.head())","metadata":{"execution":{"iopub.status.busy":"2024-10-05T10:37:07.089485Z","iopub.execute_input":"2024-10-05T10:37:07.090020Z","iopub.status.idle":"2024-10-05T10:37:07.120521Z","shell.execute_reply.started":"2024-10-05T10:37:07.089967Z","shell.execute_reply":"2024-10-05T10:37:07.119258Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.info()\n","metadata":{"execution":{"iopub.status.busy":"2024-10-05T10:37:11.410445Z","iopub.execute_input":"2024-10-05T10:37:11.410914Z","iopub.status.idle":"2024-10-05T10:37:11.424482Z","shell.execute_reply.started":"2024-10-05T10:37:11.410869Z","shell.execute_reply":"2024-10-05T10:37:11.423171Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# data.v1.value_counts()\n# data = data.rename(columns={'v1': 'Label', 'v2': 'Message'})\n","metadata":{"execution":{"iopub.status.busy":"2024-10-05T10:44:36.758550Z","iopub.execute_input":"2024-10-05T10:44:36.759107Z","iopub.status.idle":"2024-10-05T10:44:36.764287Z","shell.execute_reply.started":"2024-10-05T10:44:36.759057Z","shell.execute_reply":"2024-10-05T10:44:36.763115Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.Label.value_counts()\ndata.shape\n","metadata":{"execution":{"iopub.status.busy":"2024-10-05T10:59:31.397302Z","iopub.execute_input":"2024-10-05T10:59:31.398513Z","iopub.status.idle":"2024-10-05T10:59:31.407648Z","shell.execute_reply.started":"2024-10-05T10:59:31.398460Z","shell.execute_reply":"2024-10-05T10:59:31.406397Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data['spam'] = data['Label'].apply(lambda x: 1 if x == 'spam' else 0)","metadata":{"execution":{"iopub.status.busy":"2024-10-05T10:51:38.558689Z","iopub.execute_input":"2024-10-05T10:51:38.559188Z","iopub.status.idle":"2024-10-05T10:51:38.572228Z","shell.execute_reply.started":"2024-10-05T10:51:38.559145Z","shell.execute_reply":"2024-10-05T10:51:38.570804Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(data.Message, data.spam, test_size=0.25)","metadata":{"execution":{"iopub.status.busy":"2024-10-05T11:00:21.543553Z","iopub.execute_input":"2024-10-05T11:00:21.544093Z","iopub.status.idle":"2024-10-05T11:00:21.556562Z","shell.execute_reply.started":"2024-10-05T11:00:21.544045Z","shell.execute_reply":"2024-10-05T11:00:21.555163Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"type(X_train)","metadata":{"execution":{"iopub.status.busy":"2024-10-05T11:02:52.744417Z","iopub.execute_input":"2024-10-05T11:02:52.744958Z","iopub.status.idle":"2024-10-05T11:02:52.753376Z","shell.execute_reply.started":"2024-10-05T11:02:52.744888Z","shell.execute_reply":"2024-10-05T11:02:52.751860Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.feature_extraction.text import CountVectorizer","metadata":{"execution":{"iopub.status.busy":"2024-10-05T11:08:39.024497Z","iopub.execute_input":"2024-10-05T11:08:39.024985Z","iopub.status.idle":"2024-10-05T11:08:39.031275Z","shell.execute_reply.started":"2024-10-05T11:08:39.024937Z","shell.execute_reply":"2024-10-05T11:08:39.030034Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cv= CountVectorizer()\n\nX_train_cv = cv.fit_transform(X_train.values )\nX_train_cv","metadata":{"execution":{"iopub.status.busy":"2024-10-05T11:16:18.224387Z","iopub.execute_input":"2024-10-05T11:16:18.224870Z","iopub.status.idle":"2024-10-05T11:16:18.363396Z","shell.execute_reply.started":"2024-10-05T11:16:18.224823Z","shell.execute_reply":"2024-10-05T11:16:18.362106Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# X_train_cv.toarray()","metadata":{"execution":{"iopub.status.busy":"2024-10-05T11:17:18.579307Z","iopub.execute_input":"2024-10-05T11:17:18.579768Z","iopub.status.idle":"2024-10-05T11:17:18.585377Z","shell.execute_reply.started":"2024-10-05T11:17:18.579727Z","shell.execute_reply":"2024-10-05T11:17:18.584010Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"np.where(X_train_cv.toarray()[2]!=0)","metadata":{"execution":{"iopub.status.busy":"2024-10-05T11:21:08.692010Z","iopub.execute_input":"2024-10-05T11:21:08.692479Z","iopub.status.idle":"2024-10-05T11:21:08.799108Z","shell.execute_reply.started":"2024-10-05T11:21:08.692436Z","shell.execute_reply":"2024-10-05T11:21:08.797685Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.naive_bayes import MultinomialNB\n\nmodel = MultinomialNB()\n\nmodel.fit(X_train_cv, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-10-05T11:33:25.711452Z","iopub.execute_input":"2024-10-05T11:33:25.711972Z","iopub.status.idle":"2024-10-05T11:33:25.733184Z","shell.execute_reply.started":"2024-10-05T11:33:25.711899Z","shell.execute_reply":"2024-10-05T11:33:25.731888Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_test_cv = cv.transform(X_test)\n","metadata":{"execution":{"iopub.status.busy":"2024-10-05T11:35:36.311762Z","iopub.execute_input":"2024-10-05T11:35:36.312272Z","iopub.status.idle":"2024-10-05T11:35:36.352153Z","shell.execute_reply.started":"2024-10-05T11:35:36.312228Z","shell.execute_reply":"2024-10-05T11:35:36.350945Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import classification_report\n\ny_pred = model.predict(X_test_cv)\n\nprint(classification_report(y_test, y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-10-05T11:38:13.365466Z","iopub.execute_input":"2024-10-05T11:38:13.365964Z","iopub.status.idle":"2024-10-05T11:38:13.385904Z","shell.execute_reply.started":"2024-10-05T11:38:13.365904Z","shell.execute_reply":"2024-10-05T11:38:13.384768Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"email = [\n    \"Hey Turu, can we get together to watch football game tomorrow?\",\n    \"Upto 20% discount and parking, exclusive offer just for you. Dont miss this reward!\"\n]","metadata":{"execution":{"iopub.status.busy":"2024-10-05T11:46:03.769147Z","iopub.execute_input":"2024-10-05T11:46:03.769612Z","iopub.status.idle":"2024-10-05T11:46:03.775181Z","shell.execute_reply.started":"2024-10-05T11:46:03.769558Z","shell.execute_reply":"2024-10-05T11:46:03.773801Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"email_counts = cv.transform(email)\nmodel.predict(email_counts)","metadata":{"execution":{"iopub.status.busy":"2024-10-05T11:50:01.609082Z","iopub.execute_input":"2024-10-05T11:50:01.610219Z","iopub.status.idle":"2024-10-05T11:50:01.618797Z","shell.execute_reply.started":"2024-10-05T11:50:01.610166Z","shell.execute_reply":"2024-10-05T11:50:01.617390Z"},"trusted":true},"execution_count":null,"outputs":[]}]}